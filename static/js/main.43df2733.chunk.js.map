{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeAndExpenses.js","components/Transaction.js","components/TransactionHistory.js","components/AddNewTransaction.js","App.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeAndExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionHistory","AddNewTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43df2733.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial State\n\nconst initialState = {\n  transactions: [\n    //{ id: 1, text: \"Flower\", amount: -20 }, //This is a blank array since we don't need to do any other test\n    //{ id: 2, text: \"Salary\", amount: 300 },\n    //{ id: 3, text: \"Book\", amount: -10 },\n    //{ id: 4, text: \"Camera\", amount: 150 },\n  ],\n};\n\n// Create context\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeAndExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <div>\n      <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n        {transaction.text}\n        <span>\n          {sign}${Math.abs(transaction.amount)}\n        </span>\n        <button\n          onClick={() => deleteTransaction(transaction.id)}\n          className=\"delete-btn\"\n        >\n          x\n        </button>\n      </li>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Transaction } from \"./Transaction\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const TransactionHistory = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddNewTransaction = () => {\n  //Add the hooks & connect the useState\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)} // Add the component level state & control component within the form\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (Negative - expense, Positive + income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)} // Add the component level state & control component within the form\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeAndExpenses } from \"./components/IncomeAndExpenses\";\nimport { TransactionHistory } from \"./components/TransactionHistory\";\nimport { AddNewTransaction } from \"./components/AddNewTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalProvider>\n        <div className=\"container\">\n          <Balance />\n          <IncomeAndExpenses />\n          <TransactionHistory />\n          <AddNewTransaction />\n        </div>\n      </GlobalProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}